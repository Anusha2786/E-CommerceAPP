// <auto-generated />
using System;
using E_CommerceAPP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_CommerceAPP.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_CommerceAPP.Models.Addrees", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("addrees");
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<DateTime>("Deliverydate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Estimateddeliver")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("shipmentid")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.ToTable("deliverylists");
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Orderlist", b =>
                {
                    b.Property<int>("OrderlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderlistId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.HasKey("OrderlistId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("ShipmentId");

                    b.ToTable("orderlists");
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Payment", b =>
                {
                    b.Property<int>("paymentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("amount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("paymentdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentstatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymenttype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("paymentId");

                    b.ToTable("paymentlists");
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Shipment", b =>
                {
                    b.Property<int>("shipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("shipmentId"));

                    b.Property<DateTime>("shipmentdate")
                        .HasColumnType("datetime2");

                    b.HasKey("shipmentId");

                    b.ToTable("shipment");
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Orderlist", b =>
                {
                    b.HasOne("E_CommerceAPP.Models.Addrees", "Addrees")
                        .WithOne()
                        .HasForeignKey("E_CommerceAPP.Models.Orderlist", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CommerceAPP.Models.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addrees");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Payment", b =>
                {
                    b.HasOne("E_CommerceAPP.Models.Orderlist", null)
                        .WithMany("Payments")
                        .HasForeignKey("paymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_CommerceAPP.Models.Orderlist", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
